name: Validate Secrets

on:
  workflow_dispatch:  # Manual trigger
  schedule:
    - cron: '0 0 1 * *'  # Monthly check

jobs:
  validate-secrets:
    name: Validate Repository Secrets
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Validate Firebase Development Secrets
      run: |
        echo "🔍 Validating Firebase Development secrets..."
        
        secrets=("FIREBASE_API_KEY_DEV" "FIREBASE_AUTH_DOMAIN_DEV" "FIREBASE_PROJECT_ID_DEV" 
                "FIREBASE_STORAGE_BUCKET_DEV" "FIREBASE_MESSAGING_SENDER_ID_DEV" 
                "FIREBASE_APP_ID_DEV" "FIREBASE_MEASUREMENT_ID_DEV")
        
        missing=0
        for secret in "${secrets[@]}"; do
          case $secret in
            "FIREBASE_API_KEY_DEV")
              if [[ -z "${{ secrets.FIREBASE_API_KEY_DEV }}" ]]; then
                echo "❌ $secret is missing"
                missing=1
              else
                echo "✅ $secret is set"
              fi
              ;;
            "FIREBASE_AUTH_DOMAIN_DEV")
              if [[ -z "${{ secrets.FIREBASE_AUTH_DOMAIN_DEV }}" ]]; then
                echo "❌ $secret is missing"
                missing=1
              else
                echo "✅ $secret is set"
              fi
              ;;
            "FIREBASE_PROJECT_ID_DEV")
              if [[ -z "${{ secrets.FIREBASE_PROJECT_ID_DEV }}" ]]; then
                echo "❌ $secret is missing"
                missing=1
              else
                echo "✅ $secret is set"
              fi
              ;;
            "FIREBASE_STORAGE_BUCKET_DEV")
              if [[ -z "${{ secrets.FIREBASE_STORAGE_BUCKET_DEV }}" ]]; then
                echo "❌ $secret is missing"
                missing=1
              else
                echo "✅ $secret is set"
              fi
              ;;
            "FIREBASE_MESSAGING_SENDER_ID_DEV")
              if [[ -z "${{ secrets.FIREBASE_MESSAGING_SENDER_ID_DEV }}" ]]; then
                echo "❌ $secret is missing"
                missing=1
              else
                echo "✅ $secret is set"
              fi
              ;;
            "FIREBASE_APP_ID_DEV")
              if [[ -z "${{ secrets.FIREBASE_APP_ID_DEV }}" ]]; then
                echo "❌ $secret is missing"
                missing=1
              else
                echo "✅ $secret is set"
              fi
              ;;
            "FIREBASE_MEASUREMENT_ID_DEV")
              if [[ -z "${{ secrets.FIREBASE_MEASUREMENT_ID_DEV }}" ]]; then
                echo "❌ $secret is missing"
                missing=1
              else
                echo "✅ $secret is set"
              fi
              ;;
          esac
        done
        
        if [ $missing -eq 1 ]; then
          echo "❌ Some Firebase Development secrets are missing"
          exit 1
        fi
        
    - name: Validate Firebase Production Secrets
      run: |
        echo "🔍 Validating Firebase Production secrets..."
        
        missing=0
        if [[ -z "${{ secrets.FIREBASE_API_KEY_PROD }}" ]]; then
          echo "❌ FIREBASE_API_KEY_PROD is missing"
          missing=1
        else
          echo "✅ FIREBASE_API_KEY_PROD is set"
        fi
        
        if [[ -z "${{ secrets.FIREBASE_PROJECT_ID_PROD }}" ]]; then
          echo "❌ FIREBASE_PROJECT_ID_PROD is missing"
          missing=1
        else
          echo "✅ FIREBASE_PROJECT_ID_PROD is set"
        fi
        
        # Add other production secret validations...
        
        if [ $missing -eq 1 ]; then
          echo "❌ Some Firebase Production secrets are missing"
          exit 1
        fi
        
    - name: Validate Firebase CLI Token
      run: |
        echo "🔍 Validating Firebase CLI token..."
        if [[ -z "${{ secrets.FIREBASE_TOKEN }}" ]]; then
          echo "❌ FIREBASE_TOKEN is missing"
          exit 1
        fi
        
        # Test Firebase authentication
        npm install -g firebase-tools
        firebase projects:list --token "${{ secrets.FIREBASE_TOKEN }}" >/dev/null 2>&1
        if [ $? -eq 0 ]; then
          echo "✅ FIREBASE_TOKEN is valid"
        else
          echo "❌ FIREBASE_TOKEN is invalid or expired"
          exit 1
        fi
        
    - name: Validate Android Signing Secrets
      run: |
        echo "🔍 Validating Android signing secrets..."
        
        missing=0
        if [[ -z "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" ]]; then
          echo "❌ ANDROID_KEYSTORE_BASE64 is missing"
          missing=1
        else
          echo "✅ ANDROID_KEYSTORE_BASE64 is set"
          
          # Test keystore validity
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 --decode > test_keystore.jks
          if keytool -list -keystore test_keystore.jks -storepass "${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" -alias "${{ secrets.ANDROID_KEY_ALIAS }}" >/dev/null 2>&1; then
            echo "✅ Android keystore is valid"
          else
            echo "❌ Android keystore validation failed"
            missing=1
          fi
          rm -f test_keystore.jks
        fi
        
        if [[ -z "${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" ]]; then
          echo "❌ ANDROID_KEYSTORE_PASSWORD is missing"
          missing=1
        else
          echo "✅ ANDROID_KEYSTORE_PASSWORD is set"
        fi
        
        if [[ -z "${{ secrets.ANDROID_KEY_ALIAS }}" ]]; then
          echo "❌ ANDROID_KEY_ALIAS is missing"
          missing=1
        else
          echo "✅ ANDROID_KEY_ALIAS is set"
        fi
        
        if [[ -z "${{ secrets.ANDROID_KEY_PASSWORD }}" ]]; then
          echo "❌ ANDROID_KEY_PASSWORD is missing"
          missing=1
        else
          echo "✅ ANDROID_KEY_PASSWORD is set"
        fi
        
        if [ $missing -eq 1 ]; then
          echo "❌ Some Android signing secrets are missing or invalid"
          exit 1
        fi
        
    - name: Generate Validation Report
      if: always()
      run: |
        echo "## 🔐 Secrets Validation Report" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Date:** $(date -u)" >> $GITHUB_STEP_SUMMARY
        echo "**Repository:** ${{ github.repository }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        echo "### Required Secrets Status" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "| Category | Status |" >> $GITHUB_STEP_SUMMARY
        echo "|----------|--------|" >> $GITHUB_STEP_SUMMARY
        echo "| Firebase Development | ${{ job.status == 'success' && '✅ Valid' || '❌ Issues Found' }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Firebase Production | ${{ job.status == 'success' && '✅ Valid' || '❌ Issues Found' }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Firebase CLI Token | ${{ job.status == 'success' && '✅ Valid' || '❌ Issues Found' }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Android Signing | ${{ job.status == 'success' && '✅ Valid' || '❌ Issues Found' }} |" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ "${{ job.status }}" != "success" ]; then
          echo "### ⚠️ Action Required" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Some secrets are missing or invalid. Please:" >> $GITHUB_STEP_SUMMARY
          echo "1. Check the workflow logs for specific issues" >> $GITHUB_STEP_SUMMARY
          echo "2. Review GITHUB_SECRETS_SETUP.md for setup instructions" >> $GITHUB_STEP_SUMMARY
          echo "3. Run the setup script: ./setup-github-secrets.sh" >> $GITHUB_STEP_SUMMARY
          echo "4. Re-run this validation workflow" >> $GITHUB_STEP_SUMMARY
        else
          echo "### ✅ All Good!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "All required secrets are properly configured." >> $GITHUB_STEP_SUMMARY
        fi
